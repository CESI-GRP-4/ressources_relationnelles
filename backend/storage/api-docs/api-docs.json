{
    "openapi": "3.0.0",
    "info": {
        "title": "(Re)Sources Relationnelles",
        "version": "0.24"
    },
    "servers": [
        {
            "url": "http://localhost:80/api"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in to the application",
                "operationId": "login",
                "requestBody": {
                    "description": "User's login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserData"
                                        },
                                        "remember": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les informations d'identification fournies ne sont pas correctes."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Account banned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Votre compte est banni."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Create a new user account",
                "operationId": "signup",
                "requestBody": {
                    "description": "User's registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "firstName",
                                    "lastName",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration and user login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Email address already in use",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'adresse email est déjà utilisée."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out of the application",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid verification token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token de vérification invalide"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/verifyUser": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify the user's authentication status",
                "operationId": "verifyUser",
                "responses": {
                    "200": {
                        "description": "User is authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non authentifié"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/email/verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify the user's email address",
                "operationId": "verifyEmail",
                "requestBody": {
                    "description": "Verification token for email verification",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "your_verification_token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email successfully verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email vérifié avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid verification token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token de vérification invalide"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgot-password/send-mail": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send a password reset email; if the email does not exist, still send an email to prevent brute force attacks",
                "operationId": "forgotPassword",
                "requestBody": {
                    "description": "Email to send the password reset link",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Un email de réinitialisation de mot de passe a été envoyé."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgot-password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user's password",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "Data required for password reset",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "password",
                                    "verifyPassword"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "your_reset_token"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "verifyPassword": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully reset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mot de passe réinitialisé avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Password mismatch or invalid reset token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les mots de passe ne correspondent pas | Token de réinitialisation invalide"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get list of countries",
                "description": "Returns a list of countries with their ID, name, and code.",
                "operationId": "getCountries",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "countries": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Country"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/stats/connections": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get connection statistics",
                "description": "Fetches connection counts for a given date range along with the day having the highest average connections.",
                "operationId": "getConnections",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for fetching connections (format: DD-MM-YYYY)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for fetching connections (format: DD-MM-YYYY)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "connections": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "example": "06-03-2024"
                                                    },
                                                    "numberConnections": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "average": {
                                            "properties": {
                                                "day": {
                                                    "type": "string",
                                                    "example": "mercredi"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "2,0"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users with optional search, sort, and pagination",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to apply on firstName, lastName, and email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchColumn",
                        "in": "query",
                        "description": "Column to specifically search in (firstName, lastName, email, etc.)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchValue",
                        "in": "query",
                        "description": "Value to search for in the specified column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Column to sort the users by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortDirection",
                        "in": "query",
                        "description": "Direction to sort (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserDetail"
                                            }
                                        },
                                        "totalUsers": {
                                            "type": "integer"
                                        },
                                        "perPage": {
                                            "type": "integer"
                                        },
                                        "currentPage": {
                                            "type": "integer"
                                        },
                                        "lastPage": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin or Super Admin role required"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/createUser": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Registers a new user into the system with provided user details. Validates input data and checks for email uniqueness. On success, sends a verification email.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "User data needed to register a new account",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "role": {
                                        "description": "The role name must exist in the roles table.",
                                        "type": "string",
                                        "example": "User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserDetail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Champ(s) incorects"
                                        },
                                        "errors": {
                                            "properties": {
                                                "firstName": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The first name field is required."
                                                    }
                                                },
                                                "lastName": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The last name field is required."
                                                    }
                                                },
                                                "role": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected role is invalid."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Email already take"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Super Admin role required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden - Super Admin role required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/editUser/{id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit a user's details",
                "description": "Allows editing user details. Note: Only Super Administrators can change the user's role.",
                "operationId": "editUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "isEmailVerified": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Japan"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "postalCode": {
                                        "type": "string",
                                        "example": "75000"
                                    },
                                    "role": {
                                        "description": "Role of the user. Can only be changed by Super Administrators.",
                                        "type": "string",
                                        "example": "User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur mis à jour avec succés"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.doe@example.com"
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "isEmailVerified": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "imgURL": {
                                                    "type": "string",
                                                    "example": "/path/to/picture/user_9.jpg"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Paris"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Japan"
                                                },
                                                "countryCode": {
                                                    "type": "string",
                                                    "example": "JP"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "example": "75000"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "User"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-02-13T19:05:16.000000Z"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-02-20T19:45:22.000000Z"
                                                },
                                                "newUser": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/deleteUser/{id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Deletes a user. This action is restricted to Super Administrators only.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur supprimé avec succés."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized: Only a Super Administrator can delete a user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Non autorisé : Seul un super administrateur peut supprimer un utilisateur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "banUser/{id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Ban a user",
                "description": "Bans a user either permanently or until a specified timestamp. Super Administrators and Administrators cannot be banned.",
                "operationId": "banUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to ban",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ban details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "isPermanent"
                                ],
                                "properties": {
                                    "isPermanent": {
                                        "description": "Whether the ban is permanent",
                                        "type": "boolean"
                                    },
                                    "banTimestamp": {
                                        "description": "The UNIX timestamp until which the user is banned. Required if `isPermanent` is false.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User has been banned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'utilisateur a été banni."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or ban date in the past",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized attempt to ban an Administrator or Super Administrator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Non autorisé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/unbanUser/{id}": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Unban a user",
                "description": "Unban a previously unban user.",
                "operationId": "unbanUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to unban",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been unban.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'utilisateur a été débanni"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found or not banned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé ou pas banni"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/usershistory": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Fetch users' history",
                "description": "Retrieves a paginated history of actions performed on users, including detailed information about the user modified and the user who performed the modification.",
                "operationId": "getUsersHistory",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of history records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userHistory": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserHistoryRecord"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "perPage": {
                                            "type": "integer"
                                        },
                                        "currentPage": {
                                            "type": "integer"
                                        },
                                        "lastPage": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Country": {
                "properties": {
                    "id": {
                        "description": "Unique identifier for the country",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the country",
                        "type": "string"
                    },
                    "code": {
                        "description": "Country code",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserHistoryRecord": {
                "description": "A record of an action performed on a user",
                "properties": {
                    "userModified": {
                        "$ref": "#/components/schemas/UserDetail"
                    },
                    "modifyBy": {
                        "$ref": "#/components/schemas/UserDetail"
                    },
                    "action": {
                        "description": "The type of action performed",
                        "type": "string"
                    },
                    "time": {
                        "description": "The timestamp when the action was performed",
                        "type": "string",
                        "format": "date-time"
                    },
                    "colName": {
                        "description": "The column name that was modified, applicable for 'Modify' actions",
                        "type": "string"
                    },
                    "newValue": {
                        "description": "The new value for the modified column, applicable for 'Modify' actions",
                        "type": "string"
                    },
                    "oldValue": {
                        "description": "The old value for the modified column, applicable for 'Modify' actions",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserData": {
                "properties": {
                    "firstName": {
                        "description": "User's first name",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "User's last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "imgURL": {
                        "description": "URL to the user's profile picture",
                        "type": "string"
                    },
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "role": {
                        "description": "User's role name",
                        "type": "string"
                    },
                    "isEmailVerified": {
                        "description": "Indicates if the user's email is verified",
                        "type": "boolean"
                    },
                    "newUser": {
                        "description": "Indicates if the user is new",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UserDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "isEmailVerified": {
                        "type": "boolean"
                    },
                    "imgURL": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "isBanned": {
                        "type": "boolean"
                    },
                    "newUser": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "apiKey",
                "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}